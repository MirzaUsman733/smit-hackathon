/* Basic Bootstrap table */

.table {
  width: 100%;
  margin-bottom: 50px
    /* your spacer value */
  ;
  color: black
    /* your table-color value */
  ;
  vertical-align: center
    /* your table-cell-vertical-align value */
  ;
  border-color: black
    /* your table-border-color value */
  ;
}

.table> :not(caption)>*>* {
  padding:
    /* your table-cell-padding-y value */
    /* your table-cell-padding-x value */
    100
  ;
  background-color: var(--#{$variable-prefix}table-bg);
  border-bottom-width:
    /* your table-border-width value */
    100
  ;
  box-shadow: inset 0 0 0 9999px var(--#{$variable-prefix}table-accent-bg);
}

.table>tbody {
  vertical-align: inherit;
}

.table>thead {
  vertical-align: bottom;
}

.table> :not(:last-child)> :last-child>* {
  border-bottom-color:
    /* your table-group-separator-color value */
    black
  ;
}

/* Change placement of captions with a class */

.caption-top {
  caption-side: top;
}

/* Condensed table w/ half padding */

.table-sm> :not(caption)>*>* {
  padding:
    /* your table-cell-padding-y-sm value */
    /* your table-cell-padding-x-sm value */
    100px
  ;
}

/* Border versions */

.table-bordered> :not(caption)>* {
  border-width:
    /* your table-border-width value */
    0;
}

.table-bordered> :not(caption)>*>* {
  border-width: 0
    /* your table-border-width value */
  ;
}

.table-borderless> :not(caption)>*>* {
  border-bottom-width: 0;
}

/* Zebra-striping */

.table-striped>tbody>tr:nth-of-type(
) {
  --#{$variable-prefix}table-accent-bg: var(--#{$variable-prefix}table-striped-bg);
  color: var(--#{$variable-prefix}table-striped-color);
}

/* Active table */

.table-active {
  --#{$variable-prefix}table-accent-bg: var(--#{$variable-prefix}table-active-bg);
  color: var(--#{$variable-prefix}table-active-color);
}

/* Hover effect */

.table-hover>tbody>tr:hover {
  --#{$variable-prefix}table-accent-bg: var(--#{$variable-prefix}table-hover-bg);
  color: var(--#{$variable-prefix}table-hover-color);
}

/* Table variants */

/* Repeat this block for each $color, $value pair in $table-variants with the appropriate values */
.table-variant {
  /* Include styles for table variant based on $color and $value */
}

/* Responsive tables */

/* Repeat this block for each $breakpoint in $grid-breakpoints with the appropriate values */
@media (max-width: 992px
  /* your breakpoint value */
) {
  .table-responsive-

  /* your breakpoint infix value */
    {
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
  }
}